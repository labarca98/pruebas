<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">
<sub-flow name="finalize-bulk-api-v1-job" doc:id="4746ddee-2aee-4f30-b8d1-1cda8069df68">
		<foreach doc:name="Split records in batches" doc:id="d34514a9-81aa-4b2a-b0f2-2722a6f325cc" doc:description="Splits job into multiple batches beacuse no more than 10 000 records can be processed in a single batch." collection="#[payload]" batchSize="${jobs.maxrecordsperbatch}">
			<salesforce:create-batch doc:name="Create batch" doc:id="962009da-c148-43d8-a386-5bd52d7964e3" config-ref="salesforceConfig" jobInfoBatch="#[vars.jobInfo]" />
		</foreach>
		<salesforce:close-job doc:name="Close job" doc:id="12df521e-c63b-424a-97a0-868ee74c35a4" config-ref="salesforceConfig" jobId="#[vars.jobInfo.id]" />
	</sub-flow>
	<sub-flow name="upsert-sobjects" doc:id="807266fa-2a51-468f-9b9d-9400cb767445" >
		<salesforce:create-job doc:name="Create job" doc:id="82c1e3f0-b1fd-4cca-9529-4706cf78cdec" config-ref="salesforceConfig" operation="upsert" type="#[vars.sObjectsType]" target="jobInfo">
			<salesforce:create-job-request ><![CDATA[#[output application/java
---
{
	externalIdFieldName: vars.externalIdFieldName default "ExternalId__c",
	contentType: "JSON",
	concurrencyMode:  vars.concurrencyMode default "Parallel"
} as Object {
	class : "org.mule.extension.salesforce.api.bulk.CreateJobRequest"
}]]]></salesforce:create-job-request>
		</salesforce:create-job>
		<salesforce:create-batch doc:name="Create batch" doc:id="f675638d-f5a9-4dc6-8a02-41af1d6bd506" config-ref="salesforceConfig" jobInfoBatch="#[vars.jobInfo]" target="batchInfo">
			<salesforce:objects ><![CDATA[#[%dw 2.0
output application/java
---
if (payload.^mimeType as String contains ('application/csv' as String)) (payload as Array map {
	($ mapObject(value, key) -> {
		(using (splittedKey = key as String splitBy '.') (
			(splittedKey[0]): 
				if(sizeOf(splittedKey) > 1) 
					{
						(splittedKey[1]): value as String
					}
				else 
					value as String
		))
	})
}) else payload]]]></salesforce:objects>
		</salesforce:create-batch>
		<salesforce:close-job doc:name="Close job" doc:id="0064fdd6-d103-4c11-b8fc-ecc0d065347d" config-ref="salesforceConfig" jobId="#[vars.jobInfo.id]" />
		<ee:transform doc:name="Java to JSON" doc:id="79c0453b-5119-4d22-9bfe-2c46084d863c">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[202]" doc:name="httpStatus" doc:id="7d2da7df-2fae-4dd5-9c56-7ab04c294b83" variableName="httpStatus"/>
	</sub-flow>
	<sub-flow name="update-sobjects" doc:id="9c9029f1-9203-4baf-b380-ff106f8b7ca2">
		<salesforce:create-job operation="update" type="#[vars.sObjectsType]" doc:name="Create job" doc:id="1fabff21-79a4-4195-8187-0f7914efe422" config-ref="salesforceConfig" target="jobInfo">
			<salesforce:create-job-request><![CDATA[#[output application/java
---
{
//	externalIdFieldName: vars.externalIdFieldName default "ExternalId__c",
	contentType: "JSON",
	concurrencyMode: vars.concurrencyMode default "Parallel"
} as Object {
	class : "org.mule.extension.salesforce.api.bulk.CreateJobRequest"
}]]]></salesforce:create-job-request>
		</salesforce:create-job>
		<salesforce:create-batch doc:name="Create batch" doc:id="4eadbcc1-70fc-4675-9634-2cca86f5997e" config-ref="salesforceConfig" target="batchInfo" jobInfoBatch="#[vars.jobInfo]">
			<salesforce:objects><![CDATA[#[%dw 2.0
output application/java
---
payload]]]></salesforce:objects>
		</salesforce:create-batch>
		<salesforce:close-job doc:name="Close job" doc:id="26c8e35c-7f6a-45cd-b62f-9205b7ac5dca" config-ref="salesforceConfig" jobId="#[vars.jobInfo.id]" />
		<ee:transform doc:name="Java to JSON" doc:id="6719e059-c8c4-487f-af5f-909cf18e4160">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[202]" doc:name="httpStatus" doc:id="3aeb4d01-b30f-4557-92c6-761203d4f312" variableName="httpStatus" />
	</sub-flow>
	<sub-flow name="delete-sobjects" doc:id="96e78cfb-20fc-446f-a08a-408a3c37616b" >
		<ee:transform doc:name="Extract ids to externalIdIn and externalIdNotIn vars" doc:id="f0fd4466-8ca3-45e6-9458-acb7f4ff1e56">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="externalIdIn"><![CDATA[%dw 2.0
output application/java
---
(payload map ($.ExternalId__c as String default null)) filter ($ != null)]]></ee:set-variable>
				<ee:set-variable variableName="externalIdNotIn"><![CDATA[%dw 2.0
output application/java
---
(payload map ($.ExternalId__cNotIn as String default null)) filter ($ != null)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="58e8d284-8619-420e-a585-e6e71934dc07">
			<when expression="#[payload[0].ExternalId__cNotIn != null]">
				<flow-ref doc:name="delete-sobjects-not-in" doc:id="faf2601a-1b08-41d9-8677-06eec8dd7455" name="delete-sobjects-not-in"/>
			</when>
			<otherwise >
				<flow-ref doc:name="delete-sobjects-in" doc:id="10160df3-5d98-4cc7-ba16-a770941d2281" name="delete-sobjects-in"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="delete-sobjects-in" doc:id="3efbe3f2-3a3c-46e6-ade8-c875d688c9e7" doc:description="Deletes sObjects from Salesforce when their Merlin equivalent was deleted logically or physically.">
		<logger level="INFO" doc:name="Request sObjects from Salesforce" doc:id="20ce7e93-40a7-4b30-88f7-7785051480bb" message="Request sObjects from Salesforce"/>
		<salesforce:query doc:name="All objects of selected type" doc:id="ea080087-14aa-450a-88b8-35d7e3402b03" config-ref="salesforceConfig">
			<salesforce:salesforce-query ><![CDATA[SELECT Id, ExternalId__c FROM :sObjectType]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"sObjectType" : vars.sObjectsType
}]]]></salesforce:parameters>
		</salesforce:query>
		<logger level="INFO" doc:name="Received sObjects from Salesforce" doc:id="afaba357-6626-4ee2-873a-1266d67e2114" message="Received sObjects from Salesforce"/>
		<java:new constructor="IdentityHashMap(int)" doc:name="IdentityHashMap externalIdToIdMap" doc:id="70a8370c-bde2-4236-b6bd-a087a0404702" doc:description="LinkedHashMap is too slow on inserts and queries for SubstanceRestrictedAccess_c objects mapping. Therefore we're using IdentityHashMap which is substantially quicker on inserts and queries. We use this Java component to pass expectedSize to IdentityHashMap constructor. Otherwise, for full refresh, the Map would have to resize 19 times to accomodate the 550 000 records." class="java.util.IdentityHashMap" target="externalIdToIdMap">
			<java:args ><![CDATA[#[{
	arg0: sizeOf(payload)
}]]]></java:args>
		</java:new>
		<ee:transform doc:name="Build externalIdToIdMap" doc:id="809379e8-2965-48a4-b614-c60048edb522" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="externalIdToIdMap" ><![CDATA[%dw 2.0
output application/java
---
payload reduce ((item, acc = vars.externalIdToIdMap) -> acc ++ ((item.ExternalId__c): item.Id))]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Filter objects to delete" doc:id="4ae68f33-fd38-4923-9146-f4cac5e4f8ee" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
vars.externalIdIn map vars.externalIdToIdMap[$] filter $ != null map {
	Id: $
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="dbf564e6-d7f7-4d88-8dea-ae9f9fa6aead" >
			<when expression="#[isEmpty(payload)]">
				<logger level="INFO" doc:name="Logger" doc:id="bdbcd328-d587-41ab-9127-00f5f4105823" message="No job was scheduled as no item required deletion."/>
				<ee:transform doc:name="Transform Message" doc:id="44859d5f-9f46-46d4-bb22-d49516ea9953" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "No job was scheduled as no item required deletion."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<salesforce:create-job operation="delete" type="#[vars.sObjectsType]" doc:name="Delete sObjects deleted from Merlin" doc:id="9694d137-7cee-431e-86f5-b672cbf84986" config-ref="salesforceConfig" target="jobInfo">
			<salesforce:create-job-request><![CDATA[#[output application/java
---
{
	externalIdFieldName: vars.externalIdFieldName default "ExternalId__c",
	contentType: "CSV",
	concurrencyMode: vars.concurrencyMode default "Parallel"
} as Object {
	class : "org.mule.extension.salesforce.api.bulk.CreateJobRequest"
}]]]></salesforce:create-job-request>
		</salesforce:create-job>
				<flow-ref doc:name="finalize-bulk-api-v1-job" doc:id="67962513-62fb-4a1f-8fcb-92112569afde" name="finalize-bulk-api-v1-job" />
				<logger level="INFO" doc:name="Scheduled sObjects deletion job" doc:id="b054f7e4-b51b-4705-93b4-eef2cfc37aca" message="Scheduled sObjects deletion job" />
				<ee:transform doc:name="Java to JSON" doc:id="0a48cdf9-315d-4fe2-a109-ea14cc47bcf3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="delete-sobjects-in-BiPilot" doc:id="99e022d8-b836-4694-82cc-3bbbcdc64f36" doc:description="Deletes sObjects from Salesforce when their Bi-Pilot equivalent was deleted logically or physically.">
		<ee:transform doc:name="Extract ids to externalIdIn and externalIdNotIn vars" doc:id="a355c2cc-ddc7-46f6-9dff-b05847cf7a73">
			<ee:message>
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
(payload map {Id: $.Id}) filter ($ != null)]]></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="PAYLOAD" doc:id="5d12c4c7-6d14-4b43-a43e-b5cc2974b6dd" message="#[%dw 2.0
output application/json
---
{
	PAYLOAD: payload
}]"/>
		<logger level="INFO" doc:name="Request sObjects from Salesforce" doc:id="a4482af4-5d7b-440c-811d-90dea9a5162e" message="Request sObjects from Salesforce"/>
		<choice doc:name="Choice" doc:id="3ed62740-d235-4021-ad22-a19761b745fa" >
			<when expression="#[isEmpty(payload)]">
				<logger level="INFO" doc:name="Logger" doc:id="09a27c27-ac42-4033-a714-643630b57004" message="No job was scheduled as no item required deletion."/>
				<ee:transform doc:name="Transform Message" doc:id="45d1dd49-bcfc-4251-86ba-2c11b9641ee5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "No job was scheduled as no item required deletion."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<salesforce:create-job operation="delete" type="#[vars.sObjectsType]" doc:name="Delete sObjects deleted from Bi Pilot" doc:id="7047bdbd-fcb4-4fb4-9241-e10f61953fc2" config-ref="salesforceConfig" target="jobInfo">
			<salesforce:create-job-request><![CDATA[#[output application/java
---
{
	externalIdFieldName: vars.externalIdFieldName default "Id",
	contentType: "CSV",
	concurrencyMode: vars.concurrencyMode default "Parallel"
} as Object {
	class : "org.mule.extension.salesforce.api.bulk.CreateJobRequest"
}]]]></salesforce:create-job-request>
		</salesforce:create-job>
				<flow-ref doc:name="finalize-bulk-api-v1-job" doc:id="455ab916-8477-42aa-ada7-fb31039a40de" name="finalize-bulk-api-v1-job" />
				<logger level="INFO" doc:name="Scheduled sObjects deletion job" doc:id="263f3a00-e001-4f93-918c-020640438d08" message="Scheduled sObjects deletion job" />
				<ee:transform doc:name="Java to JSON" doc:id="aa146d6a-4750-4ca9-989c-4dbf38a1e2aa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="delete-sobjects-not-in" doc:id="120c92c6-6e73-4bea-96d3-1727bde67c4b" doc:description="Deletes sObjects from Salesforce when their Merlin equivalent was deleted logically or physically.">
		<logger level="INFO" doc:name="Request sObjects from Salesforce" doc:id="61d4d378-08d1-45a9-9774-aa1760a10c24" message="Request sObjects from Salesforce"/>
		<salesforce:query doc:name="All objects of selected type" doc:id="5b52ab55-6050-4fa7-b043-11f2ca5b8456" config-ref="salesforceConfig">
			<salesforce:salesforce-query ><![CDATA[SELECT Id, ExternalId__c FROM :sObjectType]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"sObjectType" : vars.sObjectsType
}]]]></salesforce:parameters>
		</salesforce:query>
		<logger level="INFO" doc:name="Received sObjects from Salesforce" doc:id="698c4306-38c8-409e-a761-b58eec67cbdd" message="Received sObjects from Salesforce"/>
		<ee:transform doc:name="Filter objects to delete" doc:id="33da4cd0-27c9-4f36-94c2-c9038eb1188e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
(payload filter !(vars.externalIdNotIn contains $.ExternalId__c)) map {
	Id: $.Id
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="defb915a-270e-4e43-9793-6e0f255617b7" >
			<when expression="#[isEmpty(payload)]">
				<logger level="INFO" doc:name="Logger" doc:id="bf97a540-f0da-47b5-9e78-8c78fc0b54ce" message="No job was scheduled as no item required deletion."/>
				<ee:transform doc:name="Transform Message" doc:id="ca05c8ab-35b0-45b1-8676-5a3dc4422288" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "No job was scheduled as no item required deletion."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<salesforce:create-job operation="delete" type="#[vars.sObjectsType]" doc:name="Delete sObjects deleted from Merlin" doc:id="75d27b1e-aa6b-4629-928d-debbe01a68fa" config-ref="salesforceConfig" target="jobInfo">
			<salesforce:create-job-request><![CDATA[#[output application/java
---
{
	externalIdFieldName: vars.externalIdFieldName default "ExternalId__c",
	contentType: "CSV",
	concurrencyMode: vars.concurrencyMode default "Parallel"
} as Object {
	class : "org.mule.extension.salesforce.api.bulk.CreateJobRequest"
}]]]></salesforce:create-job-request>
		</salesforce:create-job>
				<flow-ref doc:name="finalize-bulk-api-v1-job" doc:id="ff77f9cb-5ecc-4326-a5b2-a9e7accbe011" name="finalize-bulk-api-v1-job" />
				<logger level="INFO" doc:name="Scheduled sObjects deletion job" doc:id="b8f01d68-6b11-4ddd-9454-0423056e06ba" message="Scheduled sObjects deletion job" />
				<ee:transform doc:name="Java to JSON" doc:id="b420ad5d-5fbd-4b36-9b18-76d9281cb5f5">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="upsert-users" doc:id="ca4c8f2a-677b-4dee-bfd5-916827743470" >
		<set-variable value="User" doc:name="sObjectsType" doc:id="910a0fd1-b3e8-4f53-88b0-28d9d8aeb6bd" variableName="sObjectsType" />
		<set-variable value="#[[]]" doc:name="acumVar" doc:id="4abef2a0-4c7b-47fd-8c22-f67cad26b507" variableName="acumVar"/>
		<salesforce:query doc:name="All Users" doc:id="d78fe3da-416a-4a1f-a546-2b6634c1d4fd" config-ref="salesforceConfig" target="Users">
			<salesforce:salesforce-query><![CDATA[SELECT :sFields FROM :sTable]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"sTable" : "User",
	"sFields" : "Id,FirstName,LastName,IsActive,Email"
}]]]></salesforce:parameters>
		</salesforce:query>
		<logger level="INFO" doc:name="Users" doc:id="f62ee27c-df46-4fbf-8a93-0d714bb7871c" message="#[output application/json&#10;---&#10;vars.Users]" />
		<foreach doc:name="For Each" doc:id="21dd8cf3-1e7b-45e6-b1a3-fa296bdd80ce" collection="#[payload]">
			<ee:transform doc:name="Adding User Id" doc:id="b49a3b90-3dbd-4a22-9572-f2dc48d38278" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var userIdFiltered = vars.Users filter (user) -> (upper(user.FirstName) == upper(payload.FirstName)) and (upper(user.LastName)==upper(payload.LastName)) and (upper(user.Email)==upper(payload.Email))
var id = userIdFiltered.Id[0] as String default null
var isActive = userIdFiltered.IsActive[0] as Boolean default false
var domain = p('salesforce.environment-domain') as String default ""
---
if(!isActive) payload - "IsActive" ++ {
	Id: id,
	(Username: (((payload.FirstName as String default "") ++ "." ++ (payload.LastName as String default "") ++ (domain)) replace " " with "") replace "," with ".") if(id == null),
	(Alias: payload.Visa__c) if(id == null),
	(TimeZoneSidKey: "Europe/Paris") if(id == null),
	(LocaleSidKey: "fr_FR_EURO") if(id == null),
	(EmailEncodingKey: "UTF-8") if(id == null),
	(if(id == null and !isActive) 
		{
			ProfileId: "00e2p000001JBnRAAW",
			IsActive: isActive as Boolean
		}			
	else
		null),
	(LanguageLocaleKey: "en_US") if(id == null),
	activeInFederateS: isActive as Boolean
} else {
	(if(id != null)
	{
		Id: id,
		HierarchyIdentifier__c: payload.HierarchyIdentifier__c default null,
		HierarchyShort__c: payload.HierarchyShort__c default null,
		Hierarchy__c: payload.Hierarchy__c default null,
		ServierCountry__c: payload.ServierCountry__c default null,
		ServierSiteCode__c: payload.ServierSiteCode__c default null,
		ServierSiteText__c: payload.ServierSiteText__c default null,
		ManagerIdentifierNumber__c: payload.ManagerIdentifierNumber__c default null,
		ManagerIdentifierName__c: payload.ManagerIdentifierName__c default null,
		activeInFederateS: isActive as Boolean
	} 
	else payload ++ {
	Id: id,
	(Username: (((payload.FirstName as String default "") ++ "." ++ (payload.LastName as String default "") ++ (domain)) replace " " with "") replace "," with ".") if(id == null),
	(Alias: payload.Visa__c) if(id == null),
	(TimeZoneSidKey: "Europe/Paris") if(id == null),
	(LocaleSidKey: "fr_FR_EURO") if(id == null),
	(EmailEncodingKey: "UTF-8") if(id == null),
	(if(id == null and !isActive) 
		{
			ProfileId: "00e2p000001JBnRAAW"
		}			
	else
		null),
	(LanguageLocaleKey: "en_US") if(id == null),
	activeInFederateS: isActive as Boolean} )
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="0d793906-fbc1-4763-9e04-7dcc37450429" message="#[payload]" category="AddingUserId"/>
			<ee:transform doc:name="Set adding variable" doc:id="2668a5af-c688-4b53-ad1f-7fb0e450e8a7">
			<ee:message>
			</ee:message>
				<ee:variables >
					<ee:set-variable variableName="acumVar" ><![CDATA[%dw 2.0
output application/json
---
 vars.acumVar + 
 	(if(!payload.activeInFederateS)
 	{	(if(payload.Id != null) 
 			(payload - "Email" - "activeInFederateS") 
 		 else (payload - "activeInFederateS")) 
 	}else {
 		(if(payload.Id != null) 
 			(payload - "Email" - "activeInFederateS") 
 		 else (payload - "activeInFederateS"))
 	})]]></ee:set-variable>
				</ee:variables>
		</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="b3c9e37f-1390-4416-84cb-b9335e3b856a" message="#[vars.acumVar]" category="acumVar"/>
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="fde0d118-f3c5-418e-940c-d74ff701d77a" message="#[vars.acumVar]" />
		<set-payload value='#[output application/json skipNullOn = "everywhere"&#10;---&#10;vars.acumVar]' doc:name="Set Payload" doc:id="8c92adb8-c822-4926-92a8-d8e1c95c4ecc" mimeType="application/json"/>
		<flow-ref doc:name="upsert-sobjects" doc:id="dd75e941-d993-41ec-a833-209074e27c7c" name="upsert-sobjects" />
	</sub-flow>
	<sub-flow name="select-sObject-by-fieldname" doc:id="651bb3f8-cc79-4b0f-b07f-0e26c72bb5e9" >
		<set-variable value='#[message.attributes.queryParams.sFields default "Id"]' doc:name="sFields" doc:id="529f81bb-1333-432f-8c70-08a5e41fe707" variableName="sFields"/>
		<salesforce:query doc:name="All objects of selected type" doc:id="0e8d9de9-9118-4dce-bebb-9935ecbf52f5" config-ref="salesforceConfig" >
			<salesforce:salesforce-query ><![CDATA[SELECT :sFields FROM :sTable WHERE :sFilterField = ':sFilterValue']]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"sTable" : message.attributes.uriParams.sTable,
	"sFilterField" : message.attributes.uriParams.sFilterField,
	"sFields" : vars.sFields,
	"sFilterValue" : message.attributes.queryParams.sFilterValue
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="Transform Message" doc:id="408edb14-625e-4856-8a12-263c5cf9026d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="select-sObject" doc:id="cac229d0-cc58-4e37-a103-aae9fc4a3c02" >
		<set-variable value='#[message.attributes.queryParams.sFields default "Id"]' doc:name="sFields" doc:id="1d6e69d6-6181-4618-8f3a-6f5897180b69" variableName="sFields"/>
		<salesforce:query doc:name="All objects of selected type" doc:id="f74f6d36-91d3-473c-86ef-aa59bfb9e828" config-ref="salesforceConfig" >
			<salesforce:salesforce-query ><![CDATA[SELECT :sFields FROM :sTable]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"sTable" : message.attributes.uriParams.sTable,
	"sFields" : vars.sFields
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="Transform Message" doc:id="7e240d1d-ed23-4d90-bdd9-846c8e7a4759" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="select-Projects-by-projectType" doc:id="6990eff8-176f-41df-8ed4-6f380fc72766" >
		<set-variable value="#[message.attributes.queryParams.'ProjectType__c' default &quot;FDC&quot;]" doc:name="ProjectType" doc:id="583cd699-821c-4528-83fd-9a8eba2a04d5" variableName="ProjectType"/>
		<salesforce:query doc:name="All objects of selected type" doc:id="e4123971-b864-4d59-b72a-feff9ad75fe7" config-ref="salesforceConfig" >
			<salesforce:salesforce-query ><![CDATA[SELECT :sFields FROM :sTable WHERE :sFilterField = ':sFilterValue']]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"sTable" : "Project__c",
	"sFilterField" : "ProjectType__c",
	"sFields" : "Id,Name,ProjectType__c",
	"sFilterValue" : vars.ProjectType
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="Transform Message" doc:id="e0377b69-e725-4c02-9c3f-c31af7e37e13" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="select-Projects-Plan-by-projectType" doc:id="7c0b5920-18ee-499b-bc1f-67a03a40d843" >
		<set-variable value="#[message.attributes.queryParams.'ProjectType__c' default &quot;FDC&quot;]" doc:name="ProjectType" doc:id="c167ac70-0633-4f95-aef3-896628669a8a" variableName="ProjectType"/>
		<salesforce:query doc:name="All objects of selected type" doc:id="f914c612-ecf6-42a8-a117-738c2a78eb21" config-ref="salesforceConfig" >
			<salesforce:salesforce-query ><![CDATA[SELECT :sFields FROM :sTable WHERE :sFilterField = ':sFilterValue']]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"sTable" : "ProjectPlan__c",
	"sFilterField" : "ProjectType__c",
	"sFields" : "Id,Name,ProjectType__c",
	"sFilterValue" : vars.ProjectType
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="Transform Message" doc:id="18ef3938-5232-402f-8fc6-d92d6a2bc58d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
